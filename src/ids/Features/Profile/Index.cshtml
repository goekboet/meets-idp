@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@using Ids.Profile
@model SpaFlags;

<!DOCTYPE HTML>
<html>
<head>
  <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Profile</title>
    <link rel="icon" type="image/x-icon" href="~/favicon.ico" />
    <link rel="shortcut icon" type="image/x-icon" href="~/favicon.ico" />
    <link rel="stylesheet" href="~/css/site.css" />
    <script src="profile_spa/app.js"></script>
</head>
<body>
  <script
    id="profile_spa"
    src="profile_spa/index.js"
    data-anticsrf="@Xsrf.GetAndStoreTokens(Context).RequestToken"
    data-oidcLoginId="@Model.OidcLoginId"
    data-oidcLoginName="@Model.OidcLoginName">

  </script>
  @* <script>var app = Elm.Main.init({ flags: { antiCsrf: '@Xsrf.GetAndStoreTokens(Context).RequestToken', returnUrl: '@Model.ReturnUrl'}});</script> *@
</body>
</html>